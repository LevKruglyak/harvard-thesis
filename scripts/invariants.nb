(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    130030,       2641]
NotebookOptionsPosition[     78173,       1708]
NotebookOutlinePosition[    124492,       2562]
CellTagsIndexPosition[    124449,       2559]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Utility Formulas", "Subsection",
 CellChangeTimes->{{3.944773430332027*^9, 3.944773437016122*^9}, {
  3.944773497886784*^9, 3.944773523220387*^9}, {3.944775283265502*^9, 
  3.944775286071727*^9}, {3.944865636307921*^9, 3.944865638174986*^9}, {
  3.944865696602098*^9, 
  3.944865714371694*^9}},ExpressionUUID->"15f82e98-93fc-4dd5-97d7-\
5930c6c0ba92"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]", "[", "n_Integer", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"EvenQ", "[", "n", "]"}], ",", "1", ",", "2"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J", "[", "n_Integer", "]"}], " ", ":=", " ", 
  RowBox[{"Abs", "[", 
   RowBox[{"Numerator", "[", 
    RowBox[{
     RowBox[{"BernoulliB", "[", 
      RowBox[{"2", "n"}], "]"}], " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"4", " ", "n"}], ")"}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.944865718745706*^9, 3.94486575177192*^9}, {
   3.944865783486649*^9, 3.944865784846829*^9}, 3.944867796366757*^9, {
   3.944869468278657*^9, 3.94486950145474*^9}, {3.9448695742765827`*^9, 
   3.944869574954782*^9}, {3.9448696961429663`*^9, 3.944869696473977*^9}, {
   3.944869769361271*^9, 3.9448697822520027`*^9}, {3.9448698681278973`*^9, 
   3.944869868820319*^9}, {3.950566866981057*^9, 3.950566880626196*^9}, {
   3.950566913350587*^9, 3.9505669372645884`*^9}, {3.950569569345613*^9, 
   3.95056957377532*^9}, {3.95056968764555*^9, 3.950569691690181*^9}, {
   3.950569741593032*^9, 3.950569741866042*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"592928d8-9a7a-43b1-b784-c3bf0f2f4d79"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counting Formulas", "Subsection",
 CellChangeTimes->{{3.944773430332027*^9, 3.944773437016122*^9}, {
   3.944773497886784*^9, 3.944773523220387*^9}, {3.944775283265502*^9, 
   3.944775286071727*^9}, {3.944865636307921*^9, 3.944865638174986*^9}, 
   3.944865696602098*^9},ExpressionUUID->"622c05f2-4006-40ce-98bf-\
31e910d22cdd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bP4nSize", "[", 
   RowBox[{"n_Integer", "?", "Positive"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"2", "^", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "n"}], "-", "2"}], "}"}]}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "^", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "n"}], "-", "1"}], "}"}]}], "-", "1"}], ")"}], " ", "*", 
   " ", 
   RowBox[{"\[Epsilon]", "[", "n", "]"}], " ", "*", 
   RowBox[{"J", "[", "n", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.944773525355585*^9, 3.9447735505283546`*^9}, {
   3.94477360234042*^9, 3.944773603252783*^9}, {3.94477435996602*^9, 
   3.9447746029674377`*^9}, {3.94477520766846*^9, 3.944775237785239*^9}, {
   3.9447756281871653`*^9, 3.9447756283753843`*^9}, {3.9447917519653997`*^9, 
   3.944791789471163*^9}, {3.944795391404675*^9, 3.944795391750082*^9}, {
   3.944857903134136*^9, 3.944857918568471*^9}, {3.9448579652468576`*^9, 
   3.944857986561061*^9}, {3.9448601079155073`*^9, 3.944860125767627*^9}, {
   3.944861168465476*^9, 3.944861195903315*^9}, {3.944862771221715*^9, 
   3.944862774993417*^9}, {3.944862884433325*^9, 3.9448629123224173`*^9}, 
   3.944863659107561*^9, {3.944865642188319*^9, 3.944865689036502*^9}, {
   3.94486576014054*^9, 3.9448657714519672`*^9}, {3.944867800385641*^9, 
   3.944867801514453*^9}, {3.944870720705699*^9, 3.944870722397896*^9}, {
   3.944873992738411*^9, 3.944873993778242*^9}, {3.944874051768456*^9, 
   3.944874055485676*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"54baa4a0-eb8a-4864-a54e-2d3a37ebeb37"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Genus and Invariants", "Subsection",
 CellChangeTimes->{{3.944863662612433*^9, 3.944863670388294*^9}, {
  3.944870873807745*^9, 
  3.94487087694121*^9}},ExpressionUUID->"22c3c24f-7284-4036-8b59-\
c4417f8ed00e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"GenusC", "[", 
   RowBox[{"q_", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"z", ",", "x"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"SymmetricReduction", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SeriesCoefficient", "[", 
         RowBox[{
          RowBox[{"Product", "[", 
           RowBox[{
            RowBox[{"Series", "[", 
             RowBox[{
              RowBox[{"q", "[", 
               RowBox[{
                RowBox[{"x", "[", "i", "]"}], "z"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"z", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "n"}], 
         "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"x", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"c", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "//", " ", "Simplify"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cQ", "[", "z_", "]"}], " ", ":=", " ", 
  RowBox[{"1", "+", "z"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pQ", "[", "z_", "]"}], " ", ":=", " ", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"z", "^", "2"}]}], ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"GenusC", "[", 
  RowBox[{"pQ", ",", "2"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.951511791878964*^9, 3.951511883934678*^9}, {
  3.951511956363571*^9, 3.95151201124489*^9}, {3.951512043783688*^9, 
  3.951512049891522*^9}, {3.9515123263507423`*^9, 3.951512335881914*^9}, {
  3.951512409957666*^9, 3.951512429164543*^9}, {3.951512876081058*^9, 
  3.951512885924369*^9}, {3.951761766616581*^9, 3.951761799060699*^9}},
 CellLabel->
  "In[804]:=",ExpressionUUID->"e2ddecc4-7869-428a-9185-63657d15e16e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"c", "[", "1", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"c", "[", "2", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.9515118162886744`*^9, 3.951511831005239*^9}, {
  3.951511870323504*^9, 3.9515118866584663`*^9}, {3.951511958361486*^9, 
  3.951512014043489*^9}, {3.9515120480880527`*^9, 3.951512052033279*^9}, {
  3.9515123288789873`*^9, 3.951512338188375*^9}, {3.951512413095708*^9, 
  3.951512430869562*^9}, {3.9515128776440973`*^9, 3.951512887207711*^9}, {
  3.951761793189766*^9, 3.9517618009876127`*^9}},
 CellLabel->
  "Out[807]=",ExpressionUUID->"1c0ea6be-2585-4f2a-bb62-7ee01868b652"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Genus", "[", 
    RowBox[{"q_", ",", "n_Integer"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z", ",", "x"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"SymmetricReduction", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"SeriesCoefficient", "[", 
          RowBox[{
           RowBox[{"Product", "[", 
            RowBox[{
             RowBox[{"Series", "[", 
              RowBox[{
               RowBox[{"q", "[", 
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], "z"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"z", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "n"}], 
          "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"p", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "//", " ", "Simplify"}]}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pQ", "[", "z_", "]"}], ":=", 
  RowBox[{"1", "+", "z"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2Q", "[", "z_", "]"}], ":=", 
  RowBox[{"1", "+", 
   RowBox[{"z", "^", "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LQ", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Sqrt", "[", "z", "]"}], "/", 
   RowBox[{"Tanh", "[", 
    RowBox[{"Sqrt", "[", "z", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AhatQ", "[", "z_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Sqrt", "[", "z", "]"}], "/", "2"}], ")"}], "/", 
   RowBox[{"Sinh", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", "z", "]"}], "/", "2"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToddQ", "[", "z_", "]"}], " ", ":=", " ", 
   RowBox[{"z", "/", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "z"}], "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "[", "n_Integer", "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "^", 
      RowBox[{"{", 
       RowBox[{"2", "n"}], "}"}]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "^", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "n"}], "-", "1"}], "}"}]}], "-", "1"}], ")"}], 
     RowBox[{"BernoulliB", "[", 
      RowBox[{"2", "n"}], "]"}]}], ")"}], "/", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "n"}], ")"}], "!"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "[", "n_Integer", "]"}], " ", ":=", 
  RowBox[{"2", "*", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}], "!"}], "/", 
    RowBox[{"BernoulliB", "[", 
     RowBox[{"2", "n"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S", "[", "z_", "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{"z", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"AhatQ", "[", "z", "]"}], "]"}], ",", "z"}], "]"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"11587395584", "/", "8"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"S", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.944773525355585*^9, 3.9447735505283546`*^9}, {
   3.94477360234042*^9, 3.944773603252783*^9}, {3.94477435996602*^9, 
   3.9447746029674377`*^9}, {3.94477520766846*^9, 3.944775237785239*^9}, {
   3.9447756281871653`*^9, 3.9447756283753843`*^9}, {3.9447917519653997`*^9, 
   3.944791789471163*^9}, {3.944795391404675*^9, 3.944795391750082*^9}, {
   3.944857903134136*^9, 3.944857918568471*^9}, {3.9448579652468576`*^9, 
   3.944857986561061*^9}, {3.9448601079155073`*^9, 3.944860125767627*^9}, {
   3.944861168465476*^9, 3.944861195903315*^9}, {3.944862771221715*^9, 
   3.944862774993417*^9}, {3.944862884433325*^9, 3.9448629123224173`*^9}, 
   3.944863659107561*^9, {3.94486375777046*^9, 3.944863787022172*^9}, {
   3.94486402179996*^9, 3.944864065166226*^9}, {3.9448648571993723`*^9, 
   3.944864890867263*^9}, {3.944864933376109*^9, 3.944865099989258*^9}, {
   3.944865136344068*^9, 3.9448651715104713`*^9}, {3.944865352538316*^9, 
   3.9448654219149942`*^9}, {3.94486551209787*^9, 3.944865525042222*^9}, {
   3.94486763056535*^9, 3.944867802627973*^9}, {3.944867924973978*^9, 
   3.944867928304356*^9}, {3.9448680910674477`*^9, 3.944868242817645*^9}, {
   3.944868277322847*^9, 3.944868337873992*^9}, {3.944868763868655*^9, 
   3.944868804255*^9}, {3.94486895084797*^9, 3.94486897548479*^9}, {
   3.944869183615204*^9, 3.94486919356616*^9}, {3.944869512507051*^9, 
   3.9448695322925243`*^9}, {3.944869698583578*^9, 3.944869707456023*^9}, {
   3.94486989658878*^9, 3.944869898389415*^9}, {3.944870105802287*^9, 
   3.944870127915724*^9}, {3.944870305464555*^9, 3.944870308174779*^9}, {
   3.944870620945944*^9, 3.944870629317202*^9}, {3.944870678519764*^9, 
   3.944870717358374*^9}, {3.944870755621601*^9, 3.9448707660080557`*^9}, 
   3.944870796745565*^9, {3.950196575557927*^9, 3.9501966151490297`*^9}, {
   3.950623153015023*^9, 3.950623154596856*^9}, {3.950885572754017*^9, 
   3.950885661015633*^9}, {3.951511400310328*^9, 3.951511435013343*^9}, {
   3.9515158474815197`*^9, 3.951515895786487*^9}, {3.951516158677619*^9, 
   3.951516248084394*^9}, {3.95151647451696*^9, 3.951516524550085*^9}, {
   3.951516718759734*^9, 3.951516874737442*^9}, {3.951516918274287*^9, 
   3.951516932159091*^9}, {3.9515169691779203`*^9, 3.9515170048355722`*^9}, {
   3.9515184147552443`*^9, 3.951518454999447*^9}, {3.951518549932227*^9, 
   3.9515185585425262`*^9}, {3.951524760543384*^9, 3.9515247631717377`*^9}, {
   3.951524796340108*^9, 3.951524857319192*^9}, {3.951557672014817*^9, 
   3.951557674543066*^9}, {3.95156005028298*^9, 3.951560080144055*^9}},
 CellLabel->
  "In[591]:=",ExpressionUUID->"385acd73-d248-4b88-8a88-5922098d7438"],

Cell[BoxData["1448424448"], "Output",
 CellChangeTimes->{{3.951516196929768*^9, 3.951516250285782*^9}, {
   3.951516481131913*^9, 3.951516526625957*^9}, 3.951516732475708*^9, {
   3.951516764100747*^9, 3.951516814810569*^9}, {3.9515168687664213`*^9, 
   3.951516876996059*^9}, {3.9515169210292377`*^9, 3.951516935900285*^9}, {
   3.9515169733018436`*^9, 3.951517006921694*^9}, {3.951518429954071*^9, 
   3.9515184568263702`*^9}, 3.951518560483365*^9, 3.951524765937277*^9, {
   3.951524799899893*^9, 3.951524860039934*^9}, 3.951557677314477*^9, {
   3.9515600666724358`*^9, 3.951560082006199*^9}},
 CellLabel->
  "Out[600]=",ExpressionUUID->"3855ee6d-8560-4bce-8a6e-111a1084a1c7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", 
   FractionBox["z", "24"], "-", 
   FractionBox[
    SuperscriptBox["z", "2"], "1440"], "+", 
   FractionBox[
    SuperscriptBox["z", "3"], "60480"], "-", 
   FractionBox[
    SuperscriptBox["z", "4"], "2419200"], "+", 
   FractionBox[
    SuperscriptBox["z", "5"], "95800320"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "z", "]"}], "6"],
    SeriesData[$CellContext`z, 0, {}, 0, 12, 2],
    Editable->False]}],
  SeriesData[$CellContext`z, 0, {1, 0, 
    Rational[1, 24], 0, 
    Rational[-1, 1440], 0, 
    Rational[1, 60480], 0, 
    Rational[-1, 2419200], 0, 
    Rational[1, 95800320]}, 0, 12, 2],
  Editable->False]], "Output",
 CellChangeTimes->{{3.951516196929768*^9, 3.951516250285782*^9}, {
   3.951516481131913*^9, 3.951516526625957*^9}, 3.951516732475708*^9, {
   3.951516764100747*^9, 3.951516814810569*^9}, {3.9515168687664213`*^9, 
   3.951516876996059*^9}, {3.9515169210292377`*^9, 3.951516935900285*^9}, {
   3.9515169733018436`*^9, 3.951517006921694*^9}, {3.951518429954071*^9, 
   3.9515184568263702`*^9}, 3.951518560483365*^9, 3.951524765937277*^9, {
   3.951524799899893*^9, 3.951524860039934*^9}, 3.951557677314477*^9, {
   3.9515600666724358`*^9, 3.9515600820072803`*^9}},
 CellLabel->
  "Out[601]=",ExpressionUUID->"34c90c7c-9fd7-4875-b2ec-eecc13d8fc4e"]
}, Open  ]],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{
  3.9515185716425667`*^9},ExpressionUUID->"971defb0-8988-4c99-8f16-\
e4158e962b84"],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{
  3.9515162546842203`*^9},ExpressionUUID->"d5fdefde-c084-49ae-bcba-\
bc0daf427378"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Invariants", "Subsection",
 CellChangeTimes->{{3.944870803957136*^9, 3.944870805327126*^9}, {
  3.944870905466147*^9, 3.944870996583205*^9}, {3.944871731348832*^9, 
  3.94487173675736*^9}},ExpressionUUID->"900b315a-1dc2-4cbb-8f11-\
c1c86e046a18"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TopPontryagin", "[", "n_Integer", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "[", "n", "]"}], "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"\[Sigma]", "==", 
        RowBox[{"Genus", "[", 
         RowBox[{"LQ", ",", " ", "n"}], "]"}]}], ",", " ", 
       RowBox[{"p", "[", "n", "]"}]}], "]"}]}], " ", "//", " ", "Expand"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MilnorInvariant", "[", "n_Integer", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "n"}], ")"}], "!"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "^", 
         RowBox[{"{", 
          RowBox[{"2", "n"}], "}"}]}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "^", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"2", "n"}], "-", "1"}], "}"}]}], "-", "1"}], ")"}], 
        RowBox[{"BernoulliB", "[", 
         RowBox[{"2", "n"}], "]"}]}], ")"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"\[Sigma]", "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Genus", "[", 
         RowBox[{"LQ", ",", " ", "n"}], "]"}], "/.", 
        RowBox[{
         RowBox[{"p", "[", "n", "]"}], "->", "0"}]}], ")"}]}], ")"}]}], " ", "//",
    " ", "Expand"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AhatInvariant", "[", "n_Integer", "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", 
        RowBox[{"Genus", "[", 
         RowBox[{"AhatQ", ",", "n"}], "]"}]}], ")"}], "/.", 
      RowBox[{
       RowBox[{"p", "[", "n", "]"}], "->", 
       RowBox[{"TopPontryagin", "[", "n", "]"}]}]}], ")"}], "/", 
    RowBox[{"\[Epsilon]", "[", "n", "]"}]}], "  ", "//", " ", 
   "Expand"}]}]}], "Input",
 CellChangeTimes->{{3.944773525355585*^9, 3.9447735505283546`*^9}, {
   3.94477360234042*^9, 3.944773603252783*^9}, {3.94477435996602*^9, 
   3.9447746029674377`*^9}, {3.94477520766846*^9, 3.944775237785239*^9}, {
   3.9447756281871653`*^9, 3.9447756283753843`*^9}, {3.9447917519653997`*^9, 
   3.944791789471163*^9}, {3.944795391404675*^9, 3.944795391750082*^9}, {
   3.944857903134136*^9, 3.944857918568471*^9}, {3.9448579652468576`*^9, 
   3.944857986561061*^9}, {3.9448601079155073`*^9, 3.944860125767627*^9}, {
   3.944861168465476*^9, 3.944861195903315*^9}, {3.944862771221715*^9, 
   3.944862774993417*^9}, {3.944862884433325*^9, 3.9448629123224173`*^9}, 
   3.944863659107561*^9, {3.94486375777046*^9, 3.944863787022172*^9}, {
   3.94486402179996*^9, 3.944864065166226*^9}, {3.9448648571993723`*^9, 
   3.944864890867263*^9}, {3.944864933376109*^9, 3.944865099989258*^9}, {
   3.944865136344068*^9, 3.9448651715104713`*^9}, {3.944865352538316*^9, 
   3.9448654219149942`*^9}, {3.94486551209787*^9, 3.944865525042222*^9}, {
   3.94486763056535*^9, 3.944867802627973*^9}, {3.944867924973978*^9, 
   3.944867928304356*^9}, {3.9448680910674477`*^9, 3.944868242817645*^9}, {
   3.944868277322847*^9, 3.944868337873992*^9}, {3.944868763868655*^9, 
   3.944868804255*^9}, {3.94486895084797*^9, 3.94486897548479*^9}, {
   3.944869183615204*^9, 3.94486919356616*^9}, {3.944869512507051*^9, 
   3.9448695322925243`*^9}, {3.944869698583578*^9, 3.944869707456023*^9}, {
   3.94486989658878*^9, 3.944869898389415*^9}, {3.944870105802287*^9, 
   3.944870127915724*^9}, {3.944870305464555*^9, 3.944870308174779*^9}, {
   3.944870620945944*^9, 3.944870629317202*^9}, {3.944870678519764*^9, 
   3.944870717358374*^9}, {3.944870755621601*^9, 3.9448707660080557`*^9}, {
   3.944870796745565*^9, 3.9448708274287367`*^9}, {3.944871799955564*^9, 
   3.944871869480144*^9}, {3.944871906254188*^9, 3.944871918274227*^9}, {
   3.944872001246335*^9, 3.9448720130800953`*^9}, {3.944872045318343*^9, 
   3.944872062276051*^9}, {3.94487223334505*^9, 3.9448722583937683`*^9}, {
   3.944872375309278*^9, 3.944872395505209*^9}, {3.944872442281384*^9, 
   3.944872443724011*^9}, {3.944872650675902*^9, 3.9448726511157103`*^9}, {
   3.944872930762429*^9, 3.9448729356581383`*^9}, {3.944873988018086*^9, 
   3.94487406019221*^9}, {3.9448741667005463`*^9, 3.944874210933652*^9}, {
   3.9448742824295607`*^9, 3.944874291736627*^9}, {3.950632732282214*^9, 
   3.9506327397241173`*^9}, {3.950632800612105*^9, 3.950632814555882*^9}, {
   3.951346303615211*^9, 3.951346311761738*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"3a8e2366-4d52-45fd-b6e3-40cc13ea8cb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Detection", "Subsection",
 CellChangeTimes->{{3.944872673790983*^9, 
  3.944872676977272*^9}},ExpressionUUID->"6e134985-0d85-4e79-8786-\
602061edb1a2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AhatDetection", "[", "n_Integer", "]"}], " ", ":=", " ", 
  RowBox[{"Abs", "[", 
   RowBox[{"Denominator", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"AhatInvariant", "[", "n", "]"}], "/.", 
      RowBox[{
       RowBox[{"p", "[", "_", "]"}], "->", "0"}]}], "/.", 
     RowBox[{"\[Sigma]", "->", "8"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MilnorDetection", "[", "n_Integer", "]"}], " ", ":=", 
   RowBox[{"Abs", "[", 
    RowBox[{"Denominator", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"MilnorInvariant", "[", "n", "]"}], "/.", 
       RowBox[{
        RowBox[{"p", "[", "_", "]"}], "->", "0"}]}], "/.", 
      RowBox[{"\[Sigma]", "->", "8"}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EAhatDetection", "[", "n_Integer", "]"}], " ", ":=", "  ", 
  RowBox[{
   RowBox[{"2", "^", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "n"}], "-", "2"}], "}"}]}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "^", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "n"}], "-", "1"}], "}"}]}], "-", "1"}], ")"}], " ", "*", 
   " ", 
   RowBox[{"\[Epsilon]", "[", "n", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EMilnorDetection", "[", "n_Integer", "]"}], " ", ":=", "  ", 
  RowBox[{"Denominator", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}], "!"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "^", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "n"}], "-", "3"}], "}"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "^", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"2", "n"}], "-", "1"}], "}"}]}], "-", "1"}], ")"}], 
      RowBox[{"BernoulliB", "[", 
       RowBox[{"2", "n"}], "]"}]}], ")"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.944773525355585*^9, 3.9447735505283546`*^9}, {
   3.94477360234042*^9, 3.944773603252783*^9}, {3.94477435996602*^9, 
   3.9447746029674377`*^9}, {3.94477520766846*^9, 3.944775237785239*^9}, {
   3.9447756281871653`*^9, 3.9447756283753843`*^9}, {3.9447917519653997`*^9, 
   3.944791789471163*^9}, {3.944795391404675*^9, 3.944795391750082*^9}, {
   3.944857903134136*^9, 3.944857918568471*^9}, {3.9448579652468576`*^9, 
   3.944857986561061*^9}, {3.9448601079155073`*^9, 3.944860125767627*^9}, {
   3.944861168465476*^9, 3.944861195903315*^9}, {3.944862771221715*^9, 
   3.944862774993417*^9}, {3.944862884433325*^9, 3.9448629123224173`*^9}, 
   3.944863659107561*^9, {3.94486375777046*^9, 3.944863787022172*^9}, {
   3.94486402179996*^9, 3.944864065166226*^9}, {3.9448648571993723`*^9, 
   3.944864890867263*^9}, {3.944864933376109*^9, 3.944865099989258*^9}, {
   3.944865136344068*^9, 3.9448651715104713`*^9}, {3.944865352538316*^9, 
   3.9448654219149942`*^9}, {3.94486551209787*^9, 3.944865525042222*^9}, {
   3.94486763056535*^9, 3.944867802627973*^9}, {3.944867924973978*^9, 
   3.944867928304356*^9}, {3.9448680910674477`*^9, 3.944868242817645*^9}, {
   3.944868277322847*^9, 3.944868337873992*^9}, {3.944868763868655*^9, 
   3.944868804255*^9}, {3.94486895084797*^9, 3.94486897548479*^9}, {
   3.944869183615204*^9, 3.94486919356616*^9}, {3.944869512507051*^9, 
   3.9448695322925243`*^9}, {3.944869698583578*^9, 3.944869707456023*^9}, {
   3.94486989658878*^9, 3.944869898389415*^9}, {3.944870105802287*^9, 
   3.944870127915724*^9}, {3.944870305464555*^9, 3.944870308174779*^9}, {
   3.944870620945944*^9, 3.944870629317202*^9}, {3.944870678519764*^9, 
   3.944870717358374*^9}, {3.944870755621601*^9, 3.9448707660080557`*^9}, {
   3.944871791729437*^9, 3.9448717937375174`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"d758b261-f9ce-4070-a46a-c196ec6a72e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculations", "Subsection",
 CellChangeTimes->{{3.9448629672765093`*^9, 3.944862968416662*^9}, {
  3.944863796734666*^9, 3.9448637989681377`*^9}, {3.944863925107725*^9, 
  3.9448639293447323`*^9}, {3.944864100412126*^9, 3.944864115577285*^9}, {
  3.944871004612487*^9, 
  3.9448710074139547`*^9}},ExpressionUUID->"aec9b29a-2bee-4311-840f-\
f751cf19e613"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"InvExpand", "[", "expr_", "]"}], " ", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "=", 
        RowBox[{"Together", "[", "expr", "]"}]}], ",", " ", "d"}], "}"}], ",",
      " ", 
     RowBox[{
      RowBox[{"d", "=", 
       RowBox[{"Denominator", "[", "t", "]"}]}], ";", " ", 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{
         RowBox[{"PolynomialMod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"t", " ", "*", "d"}], "/.", 
            RowBox[{
             RowBox[{"p", "[", "_", "]"}], "->", "0"}]}], ",", "d"}], "]"}], 
         "/", "d"}], "]"}], " ", "+", " ", 
       RowBox[{"Together", "[", 
        RowBox[{"(", 
         RowBox[{"t", "/.", 
          RowBox[{"\[Sigma]", "->", "0"}]}], ")"}], "]"}]}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TopPontryagin", "[", "2", "]"}], " ", "//", " ", 
  "InvExpand"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TopPontryagin", "[", "3", "]"}], " ", "//", " ", 
  "InvExpand"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TopPontryagin", "[", "4", "]"}], " ", "//", " ", 
  "InvExpand"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TopPontryagin", "[", "5", "]"}], " ", "//", " ", 
  "InvExpand"}]}], "Input",
 CellChangeTimes->{{3.944773616603557*^9, 3.944773661679523*^9}, {
   3.944774318943184*^9, 3.9447743192827997`*^9}, {3.9447743913525352`*^9, 
   3.944774392930335*^9}, {3.944774518200965*^9, 3.9447745182785788`*^9}, {
   3.944774590141368*^9, 3.944774590326869*^9}, 3.944775204600359*^9, {
   3.944775287582745*^9, 3.944775295112183*^9}, {3.944775338193928*^9, 
   3.944775417351428*^9}, {3.94477548145687*^9, 3.944775570431952*^9}, {
   3.944775608383992*^9, 3.944775706309557*^9}, {3.9447757567713137`*^9, 
   3.944775757903574*^9}, {3.944775886758391*^9, 3.944775886832255*^9}, {
   3.944775929583664*^9, 3.944775930716729*^9}, {3.9447917949195232`*^9, 
   3.944791859199896*^9}, {3.944791896454421*^9, 3.9447918973554077`*^9}, {
   3.944791965246148*^9, 3.944791982971891*^9}, {3.944795249496159*^9, 
   3.944795251027397*^9}, {3.94479540111692*^9, 3.944795435358255*^9}, {
   3.9447958114628477`*^9, 3.9447958816405287`*^9}, {3.9447959332159843`*^9, 
   3.944795947215364*^9}, {3.9447960522741003`*^9, 3.944796072507556*^9}, {
   3.944796128939515*^9, 3.944796323050993*^9}, {3.9447964209925013`*^9, 
   3.9447964933902683`*^9}, {3.9448436950997677`*^9, 3.944843777125477*^9}, {
   3.9448577188876057`*^9, 3.944857750828374*^9}, {3.94485782018957*^9, 
   3.944857850395545*^9}, {3.944857923712068*^9, 3.944857940905099*^9}, {
   3.9448579828253727`*^9, 3.944857990079715*^9}, {3.944858025984462*^9, 
   3.94485810702101*^9}, {3.944858148959814*^9, 3.944858365661837*^9}, {
   3.944858397032349*^9, 3.944858580496009*^9}, {3.9448586360570183`*^9, 
   3.944858641472199*^9}, {3.944858674590743*^9, 3.944858862571951*^9}, {
   3.9448600101797132`*^9, 3.9448600890288553`*^9}, {3.944860132521225*^9, 
   3.9448601679169493`*^9}, {3.944860953142342*^9, 3.944860979442827*^9}, {
   3.944861171492749*^9, 3.9448611989210567`*^9}, {3.944862274581111*^9, 
   3.9448623400113087`*^9}, {3.9448623937257967`*^9, 
   3.9448624277015657`*^9}, {3.944862486285843*^9, 3.944862626146698*^9}, {
   3.944862659578277*^9, 3.944862690843823*^9}, {3.944862732332162*^9, 
   3.944862788769216*^9}, {3.944862850267426*^9, 3.944862979005342*^9}, {
   3.9448637146090403`*^9, 3.9448637465292587`*^9}, {3.944863791792458*^9, 
   3.9448638723168707`*^9}, {3.944863944201324*^9, 3.944864036518498*^9}, {
   3.9448640713118763`*^9, 3.944864082948851*^9}, {3.944864129013356*^9, 
   3.944864163789671*^9}, {3.94486475161766*^9, 3.9448647614246597`*^9}, {
   3.944864870128127*^9, 3.94486489932836*^9}, {3.944865020221725*^9, 
   3.944865022025709*^9}, {3.9448650582606077`*^9, 3.9448651991833773`*^9}, {
   3.944865338293745*^9, 3.944865339864106*^9}, {3.9448654731388807`*^9, 
   3.944865473230339*^9}, {3.944865549340364*^9, 3.94486557016042*^9}, {
   3.9448675708770227`*^9, 3.944867574612132*^9}, {3.9448677546890593`*^9, 
   3.944867754776978*^9}, {3.9448679567393723`*^9, 3.944867964540365*^9}, {
   3.944868254646173*^9, 3.9448682546979923`*^9}, {3.944868303605901*^9, 
   3.9448683036429462`*^9}, {3.944868347889265*^9, 3.9448683510441847`*^9}, {
   3.944868438183161*^9, 3.944868438269607*^9}, {3.944868614193729*^9, 
   3.944868615890386*^9}, {3.944868853349267*^9, 3.944868878869398*^9}, {
   3.944869204555172*^9, 3.944869206588174*^9}, {3.944869259242371*^9, 
   3.944869259796327*^9}, {3.944869358981914*^9, 3.944869390470931*^9}, {
   3.944869538919318*^9, 3.944869539496881*^9}, {3.944869713610046*^9, 
   3.94486974395693*^9}, {3.944870139073228*^9, 3.944870139136526*^9}, {
   3.9448702552457047`*^9, 3.9448702561530457`*^9}, {3.944870296549191*^9, 
   3.9448703265503674`*^9}, {3.9448705691735687`*^9, 3.944870581617426*^9}, {
   3.944870632054563*^9, 3.9448706661470137`*^9}, {3.944870726771076*^9, 
   3.944870742317932*^9}, {3.944871015510398*^9, 3.944871023162706*^9}, 
   3.944871195701342*^9, {3.944871675721218*^9, 3.944871707822977*^9}, {
   3.9448720991771393`*^9, 3.944872107082232*^9}, {3.9448724547949867`*^9, 
   3.944872478845043*^9}, {3.944872645290012*^9, 3.944872645771802*^9}, {
   3.944872874714285*^9, 3.944872938421493*^9}, {3.944873172750493*^9, 
   3.944873199985714*^9}, {3.944873538157501*^9, 3.94487357938555*^9}, {
   3.9448740424808817`*^9, 3.944874078986093*^9}, {3.944874117060054*^9, 
   3.9448741583390503`*^9}, {3.94487420557049*^9, 3.944874264188245*^9}, {
   3.944875256711779*^9, 3.9448752909509897`*^9}, {3.9450475388602257`*^9, 
   3.945047593708316*^9}, {3.9450486329928293`*^9, 3.9450486649258833`*^9}, {
   3.949886711116188*^9, 3.949886744063713*^9}, {3.9498867786128473`*^9, 
   3.949886803440893*^9}, {3.9502277375992413`*^9, 3.950227785351449*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"bb1782a8-c4e7-4848-89bb-e0e79a5960c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"3", " ", "\[Sigma]"}], "7"], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"p", "[", "1", "]"}], "2"], "7"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9448630422299013`*^9, {3.944863740658929*^9, 3.9448637493106403`*^9}, {
   3.9448638342875643`*^9, 3.944863861032889*^9}, {3.9448639567199078`*^9, 
   3.9448639751349707`*^9}, {3.944864038810459*^9, 3.9448640449723053`*^9}, {
   3.944864077223249*^9, 3.944864086470265*^9}, {3.944864127682025*^9, 
   3.944864166337082*^9}, 3.9448647640152903`*^9, {3.944864878120373*^9, 
   3.9448649023254013`*^9}, {3.9448650244591827`*^9, 3.944865120285997*^9}, {
   3.944865155890127*^9, 3.94486520277389*^9}, 3.944865343650646*^9, {
   3.944865402833946*^9, 3.944865431534256*^9}, 3.9448654757259293`*^9, {
   3.944865543083642*^9, 3.944865573082685*^9}, 3.9448656223472*^9, {
   3.9448657799515667`*^9, 3.9448657881324453`*^9}, 3.944867591592836*^9, 
   3.9448676437329493`*^9, {3.944867726420035*^9, 3.944867757588005*^9}, 
   3.944867806286544*^9, {3.944867933278111*^9, 3.944867966822075*^9}, 
   3.9448681136566477`*^9, {3.944868221910631*^9, 3.944868256926525*^9}, {
   3.9448683009747*^9, 3.944868305996142*^9}, {3.944868346525352*^9, 
   3.944868355391667*^9}, 3.9448684418144283`*^9, 3.944868618551729*^9, 
   3.944868809301766*^9, {3.944868856077868*^9, 3.9448688817393703`*^9}, {
   3.944868957873908*^9, 3.944868967312306*^9}, {3.9448691921391697`*^9, 
   3.944869209813281*^9}, 3.944869262601307*^9, {3.944869364852697*^9, 
   3.9448693931420317`*^9}, {3.9448695369505463`*^9, 3.944869547711876*^9}, {
   3.944869583066887*^9, 3.9448695880695744`*^9}, {3.94486971185631*^9, 
   3.944869746889935*^9}, {3.944870114883615*^9, 3.9448701422413797`*^9}, 
   3.9448702588013477`*^9, {3.944870299716125*^9, 3.944870329665805*^9}, {
   3.944870642091811*^9, 3.944870670106592*^9}, {3.944870738295493*^9, 
   3.944870745861504*^9}, 3.9448710131141453`*^9, 3.944871197619019*^9, {
   3.944871687028665*^9, 3.9448717105428743`*^9}, 3.944871770631998*^9, 
   3.9448720732695293`*^9, 3.9448721096968203`*^9, 3.944872263603178*^9, {
   3.944872384247899*^9, 3.944872405037994*^9}, {3.9448724481965446`*^9, 
   3.944872481557919*^9}, {3.944872872728424*^9, 3.9448729454749403`*^9}, {
   3.944873176652182*^9, 3.944873202535262*^9}, {3.944873543577909*^9, 
   3.944873574098654*^9}, {3.9448740400465813`*^9, 3.944874080904498*^9}, {
   3.9448741221606293`*^9, 3.944874161137451*^9}, {3.944874202136689*^9, 
   3.944874225698382*^9}, 3.944874267336069*^9, {3.944875273359373*^9, 
   3.944875284135727*^9}, 3.944875376024693*^9, 3.94504738462927*^9, {
   3.94504756937076*^9, 3.945047585695619*^9}, 3.945047627730583*^9, 
   3.945048667566327*^9, 3.948245094304249*^9, 3.949886684071867*^9, {
   3.949886718303659*^9, 3.949886746727936*^9}, {3.949886782699533*^9, 
   3.9498868059286747`*^9}, 3.950227742653801*^9, {3.950227775024096*^9, 
   3.950227787753582*^9}, 3.9505664062184973`*^9, 3.950566736225773*^9, 
   3.95062316756057*^9, 3.9506328215620728`*^9, 3.950633711509795*^9, 
   3.951136643095454*^9, 3.951138848813601*^9, 3.951139934417789*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"e116c431-bc81-490b-9390-7cec853ba949"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"15", " ", "\[Sigma]"}], "62"], "+", 
   RowBox[{
    FractionBox["1", "62"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox[
        RowBox[{"p", "[", "1", "]"}], "3"]}], "+", 
      RowBox[{"13", " ", 
       RowBox[{"p", "[", "1", "]"}], " ", 
       RowBox[{"p", "[", "2", "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9448630422299013`*^9, {3.944863740658929*^9, 3.9448637493106403`*^9}, {
   3.9448638342875643`*^9, 3.944863861032889*^9}, {3.9448639567199078`*^9, 
   3.9448639751349707`*^9}, {3.944864038810459*^9, 3.9448640449723053`*^9}, {
   3.944864077223249*^9, 3.944864086470265*^9}, {3.944864127682025*^9, 
   3.944864166337082*^9}, 3.9448647640152903`*^9, {3.944864878120373*^9, 
   3.9448649023254013`*^9}, {3.9448650244591827`*^9, 3.944865120285997*^9}, {
   3.944865155890127*^9, 3.94486520277389*^9}, 3.944865343650646*^9, {
   3.944865402833946*^9, 3.944865431534256*^9}, 3.9448654757259293`*^9, {
   3.944865543083642*^9, 3.944865573082685*^9}, 3.9448656223472*^9, {
   3.9448657799515667`*^9, 3.9448657881324453`*^9}, 3.944867591592836*^9, 
   3.9448676437329493`*^9, {3.944867726420035*^9, 3.944867757588005*^9}, 
   3.944867806286544*^9, {3.944867933278111*^9, 3.944867966822075*^9}, 
   3.9448681136566477`*^9, {3.944868221910631*^9, 3.944868256926525*^9}, {
   3.9448683009747*^9, 3.944868305996142*^9}, {3.944868346525352*^9, 
   3.944868355391667*^9}, 3.9448684418144283`*^9, 3.944868618551729*^9, 
   3.944868809301766*^9, {3.944868856077868*^9, 3.9448688817393703`*^9}, {
   3.944868957873908*^9, 3.944868967312306*^9}, {3.9448691921391697`*^9, 
   3.944869209813281*^9}, 3.944869262601307*^9, {3.944869364852697*^9, 
   3.9448693931420317`*^9}, {3.9448695369505463`*^9, 3.944869547711876*^9}, {
   3.944869583066887*^9, 3.9448695880695744`*^9}, {3.94486971185631*^9, 
   3.944869746889935*^9}, {3.944870114883615*^9, 3.9448701422413797`*^9}, 
   3.9448702588013477`*^9, {3.944870299716125*^9, 3.944870329665805*^9}, {
   3.944870642091811*^9, 3.944870670106592*^9}, {3.944870738295493*^9, 
   3.944870745861504*^9}, 3.9448710131141453`*^9, 3.944871197619019*^9, {
   3.944871687028665*^9, 3.9448717105428743`*^9}, 3.944871770631998*^9, 
   3.9448720732695293`*^9, 3.9448721096968203`*^9, 3.944872263603178*^9, {
   3.944872384247899*^9, 3.944872405037994*^9}, {3.9448724481965446`*^9, 
   3.944872481557919*^9}, {3.944872872728424*^9, 3.9448729454749403`*^9}, {
   3.944873176652182*^9, 3.944873202535262*^9}, {3.944873543577909*^9, 
   3.944873574098654*^9}, {3.9448740400465813`*^9, 3.944874080904498*^9}, {
   3.9448741221606293`*^9, 3.944874161137451*^9}, {3.944874202136689*^9, 
   3.944874225698382*^9}, 3.944874267336069*^9, {3.944875273359373*^9, 
   3.944875284135727*^9}, 3.944875376024693*^9, 3.94504738462927*^9, {
   3.94504756937076*^9, 3.945047585695619*^9}, 3.945047627730583*^9, 
   3.945048667566327*^9, 3.948245094304249*^9, 3.949886684071867*^9, {
   3.949886718303659*^9, 3.949886746727936*^9}, {3.949886782699533*^9, 
   3.9498868059286747`*^9}, 3.950227742653801*^9, {3.950227775024096*^9, 
   3.950227787753582*^9}, 3.9505664062184973`*^9, 3.950566736225773*^9, 
   3.95062316756057*^9, 3.9506328215620728`*^9, 3.950633711509795*^9, 
   3.951136643095454*^9, 3.951138848813601*^9, 3.951139934990017*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"426d85a8-df3c-4dca-a6c8-2af7ad99a44f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"26", " ", "\[Sigma]"}], "127"], "+", 
   RowBox[{
    FractionBox["1", "381"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"p", "[", "1", "]"}], "4"]}], "-", 
      RowBox[{"22", " ", 
       SuperscriptBox[
        RowBox[{"p", "[", "1", "]"}], "2"], " ", 
       RowBox[{"p", "[", "2", "]"}]}], "+", 
      RowBox[{"19", " ", 
       SuperscriptBox[
        RowBox[{"p", "[", "2", "]"}], "2"]}], "+", 
      RowBox[{"71", " ", 
       RowBox[{"p", "[", "1", "]"}], " ", 
       RowBox[{"p", "[", "3", "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9448630422299013`*^9, {3.944863740658929*^9, 3.9448637493106403`*^9}, {
   3.9448638342875643`*^9, 3.944863861032889*^9}, {3.9448639567199078`*^9, 
   3.9448639751349707`*^9}, {3.944864038810459*^9, 3.9448640449723053`*^9}, {
   3.944864077223249*^9, 3.944864086470265*^9}, {3.944864127682025*^9, 
   3.944864166337082*^9}, 3.9448647640152903`*^9, {3.944864878120373*^9, 
   3.9448649023254013`*^9}, {3.9448650244591827`*^9, 3.944865120285997*^9}, {
   3.944865155890127*^9, 3.94486520277389*^9}, 3.944865343650646*^9, {
   3.944865402833946*^9, 3.944865431534256*^9}, 3.9448654757259293`*^9, {
   3.944865543083642*^9, 3.944865573082685*^9}, 3.9448656223472*^9, {
   3.9448657799515667`*^9, 3.9448657881324453`*^9}, 3.944867591592836*^9, 
   3.9448676437329493`*^9, {3.944867726420035*^9, 3.944867757588005*^9}, 
   3.944867806286544*^9, {3.944867933278111*^9, 3.944867966822075*^9}, 
   3.9448681136566477`*^9, {3.944868221910631*^9, 3.944868256926525*^9}, {
   3.9448683009747*^9, 3.944868305996142*^9}, {3.944868346525352*^9, 
   3.944868355391667*^9}, 3.9448684418144283`*^9, 3.944868618551729*^9, 
   3.944868809301766*^9, {3.944868856077868*^9, 3.9448688817393703`*^9}, {
   3.944868957873908*^9, 3.944868967312306*^9}, {3.9448691921391697`*^9, 
   3.944869209813281*^9}, 3.944869262601307*^9, {3.944869364852697*^9, 
   3.9448693931420317`*^9}, {3.9448695369505463`*^9, 3.944869547711876*^9}, {
   3.944869583066887*^9, 3.9448695880695744`*^9}, {3.94486971185631*^9, 
   3.944869746889935*^9}, {3.944870114883615*^9, 3.9448701422413797`*^9}, 
   3.9448702588013477`*^9, {3.944870299716125*^9, 3.944870329665805*^9}, {
   3.944870642091811*^9, 3.944870670106592*^9}, {3.944870738295493*^9, 
   3.944870745861504*^9}, 3.9448710131141453`*^9, 3.944871197619019*^9, {
   3.944871687028665*^9, 3.9448717105428743`*^9}, 3.944871770631998*^9, 
   3.9448720732695293`*^9, 3.9448721096968203`*^9, 3.944872263603178*^9, {
   3.944872384247899*^9, 3.944872405037994*^9}, {3.9448724481965446`*^9, 
   3.944872481557919*^9}, {3.944872872728424*^9, 3.9448729454749403`*^9}, {
   3.944873176652182*^9, 3.944873202535262*^9}, {3.944873543577909*^9, 
   3.944873574098654*^9}, {3.9448740400465813`*^9, 3.944874080904498*^9}, {
   3.9448741221606293`*^9, 3.944874161137451*^9}, {3.944874202136689*^9, 
   3.944874225698382*^9}, 3.944874267336069*^9, {3.944875273359373*^9, 
   3.944875284135727*^9}, 3.944875376024693*^9, 3.94504738462927*^9, {
   3.94504756937076*^9, 3.945047585695619*^9}, 3.945047627730583*^9, 
   3.945048667566327*^9, 3.948245094304249*^9, 3.949886684071867*^9, {
   3.949886718303659*^9, 3.949886746727936*^9}, {3.949886782699533*^9, 
   3.9498868059286747`*^9}, 3.950227742653801*^9, {3.950227775024096*^9, 
   3.950227787753582*^9}, 3.9505664062184973`*^9, 3.950566736225773*^9, 
   3.95062316756057*^9, 3.9506328215620728`*^9, 3.950633711509795*^9, 
   3.951136643095454*^9, 3.951138848813601*^9, 3.95113993574931*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"334f50e0-ce90-4794-9828-047cac35648d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"79", " ", "\[Sigma]"}], "146"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "10"}], " ", 
      SuperscriptBox[
       RowBox[{"p", "[", "1", "]"}], "5"]}], "+", 
     RowBox[{"83", " ", 
      SuperscriptBox[
       RowBox[{"p", "[", "1", "]"}], "3"], " ", 
      RowBox[{"p", "[", "2", "]"}]}], "-", 
     RowBox[{"127", " ", 
      RowBox[{"p", "[", "1", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"p", "[", "2", "]"}], "2"]}], "-", 
     RowBox[{"237", " ", 
      SuperscriptBox[
       RowBox[{"p", "[", "1", "]"}], "2"], " ", 
      RowBox[{"p", "[", "3", "]"}]}], "+", 
     RowBox[{"336", " ", 
      RowBox[{"p", "[", "2", "]"}], " ", 
      RowBox[{"p", "[", "3", "]"}]}], "+", 
     RowBox[{"919", " ", 
      RowBox[{"p", "[", "1", "]"}], " ", 
      RowBox[{"p", "[", "4", "]"}]}]}], "5110"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9448630422299013`*^9, {3.944863740658929*^9, 3.9448637493106403`*^9}, {
   3.9448638342875643`*^9, 3.944863861032889*^9}, {3.9448639567199078`*^9, 
   3.9448639751349707`*^9}, {3.944864038810459*^9, 3.9448640449723053`*^9}, {
   3.944864077223249*^9, 3.944864086470265*^9}, {3.944864127682025*^9, 
   3.944864166337082*^9}, 3.9448647640152903`*^9, {3.944864878120373*^9, 
   3.9448649023254013`*^9}, {3.9448650244591827`*^9, 3.944865120285997*^9}, {
   3.944865155890127*^9, 3.94486520277389*^9}, 3.944865343650646*^9, {
   3.944865402833946*^9, 3.944865431534256*^9}, 3.9448654757259293`*^9, {
   3.944865543083642*^9, 3.944865573082685*^9}, 3.9448656223472*^9, {
   3.9448657799515667`*^9, 3.9448657881324453`*^9}, 3.944867591592836*^9, 
   3.9448676437329493`*^9, {3.944867726420035*^9, 3.944867757588005*^9}, 
   3.944867806286544*^9, {3.944867933278111*^9, 3.944867966822075*^9}, 
   3.9448681136566477`*^9, {3.944868221910631*^9, 3.944868256926525*^9}, {
   3.9448683009747*^9, 3.944868305996142*^9}, {3.944868346525352*^9, 
   3.944868355391667*^9}, 3.9448684418144283`*^9, 3.944868618551729*^9, 
   3.944868809301766*^9, {3.944868856077868*^9, 3.9448688817393703`*^9}, {
   3.944868957873908*^9, 3.944868967312306*^9}, {3.9448691921391697`*^9, 
   3.944869209813281*^9}, 3.944869262601307*^9, {3.944869364852697*^9, 
   3.9448693931420317`*^9}, {3.9448695369505463`*^9, 3.944869547711876*^9}, {
   3.944869583066887*^9, 3.9448695880695744`*^9}, {3.94486971185631*^9, 
   3.944869746889935*^9}, {3.944870114883615*^9, 3.9448701422413797`*^9}, 
   3.9448702588013477`*^9, {3.944870299716125*^9, 3.944870329665805*^9}, {
   3.944870642091811*^9, 3.944870670106592*^9}, {3.944870738295493*^9, 
   3.944870745861504*^9}, 3.9448710131141453`*^9, 3.944871197619019*^9, {
   3.944871687028665*^9, 3.9448717105428743`*^9}, 3.944871770631998*^9, 
   3.9448720732695293`*^9, 3.9448721096968203`*^9, 3.944872263603178*^9, {
   3.944872384247899*^9, 3.944872405037994*^9}, {3.9448724481965446`*^9, 
   3.944872481557919*^9}, {3.944872872728424*^9, 3.9448729454749403`*^9}, {
   3.944873176652182*^9, 3.944873202535262*^9}, {3.944873543577909*^9, 
   3.944873574098654*^9}, {3.9448740400465813`*^9, 3.944874080904498*^9}, {
   3.9448741221606293`*^9, 3.944874161137451*^9}, {3.944874202136689*^9, 
   3.944874225698382*^9}, 3.944874267336069*^9, {3.944875273359373*^9, 
   3.944875284135727*^9}, 3.944875376024693*^9, 3.94504738462927*^9, {
   3.94504756937076*^9, 3.945047585695619*^9}, 3.945047627730583*^9, 
   3.945048667566327*^9, 3.948245094304249*^9, 3.949886684071867*^9, {
   3.949886718303659*^9, 3.949886746727936*^9}, {3.949886782699533*^9, 
   3.9498868059286747`*^9}, 3.950227742653801*^9, {3.950227775024096*^9, 
   3.950227787753582*^9}, 3.9505664062184973`*^9, 3.950566736225773*^9, 
   3.95062316756057*^9, 3.9506328215620728`*^9, 3.950633711509795*^9, 
   3.951136643095454*^9, 3.951138848813601*^9, 3.9511399366685543`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"1141645e-eb7b-43af-9712-eade294dcdc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"4725", " ", "\[Sigma]"}], "127"]}], "-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"p", "[", "1", "]"}], "4"], "127"], "+", 
   RowBox[{
    FractionBox["22", "381"], " ", 
    SuperscriptBox[
     RowBox[{"p", "[", "1", "]"}], "2"], " ", 
    RowBox[{"p", "[", "2", "]"}]}], "-", 
   FractionBox[
    RowBox[{"19", " ", 
     SuperscriptBox[
      RowBox[{"p", "[", "2", "]"}], "2"]}], "381"], "-", 
   RowBox[{
    FractionBox["71", "381"], " ", 
    RowBox[{"p", "[", "1", "]"}], " ", 
    RowBox[{"p", "[", "3", "]"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.9502275918245993`*^9, 3.950227592168515*^9}, {
  3.9506231299171143`*^9, 3.950623130660555*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"900abb62-4c67-4333-b3a0-c4f6a599f9a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"4725", " ", "\[Sigma]"}], "127"]}], "-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"p", "[", "1", "]"}], "4"], "127"], "+", 
   RowBox[{
    FractionBox["22", "381"], " ", 
    SuperscriptBox[
     RowBox[{"p", "[", "1", "]"}], "2"], " ", 
    RowBox[{"p", "[", "2", "]"}]}], "-", 
   FractionBox[
    RowBox[{"19", " ", 
     SuperscriptBox[
      RowBox[{"p", "[", "2", "]"}], "2"]}], "381"], "-", 
   RowBox[{
    FractionBox["71", "381"], " ", 
    RowBox[{"p", "[", "1", "]"}], " ", 
    RowBox[{"p", "[", "3", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9448630422299013`*^9, {3.944863740658929*^9, 3.9448637493106403`*^9}, {
   3.9448638342875643`*^9, 3.944863861032889*^9}, {3.9448639567199078`*^9, 
   3.9448639751349707`*^9}, {3.944864038810459*^9, 3.9448640449723053`*^9}, {
   3.944864077223249*^9, 3.944864086470265*^9}, {3.944864127682025*^9, 
   3.944864166337082*^9}, 3.9448647640152903`*^9, {3.944864878120373*^9, 
   3.9448649023254013`*^9}, {3.9448650244591827`*^9, 3.944865120285997*^9}, {
   3.944865155890127*^9, 3.94486520277389*^9}, 3.944865343650646*^9, {
   3.944865402833946*^9, 3.944865431534256*^9}, 3.9448654757259293`*^9, {
   3.944865543083642*^9, 3.944865573082685*^9}, 3.9448656223472*^9, {
   3.9448657799515667`*^9, 3.9448657881324453`*^9}, 3.944867591592836*^9, 
   3.9448676437329493`*^9, {3.944867726420035*^9, 3.944867757588005*^9}, 
   3.944867806286544*^9, {3.944867933278111*^9, 3.944867966822075*^9}, 
   3.9448681136566477`*^9, {3.944868221910631*^9, 3.944868256926525*^9}, {
   3.9448683009747*^9, 3.944868305996142*^9}, {3.944868346525352*^9, 
   3.944868355391667*^9}, 3.9448684418144283`*^9, 3.944868618551729*^9, 
   3.944868809301766*^9, {3.944868856077868*^9, 3.9448688817393703`*^9}, {
   3.944868957873908*^9, 3.944868967312306*^9}, {3.9448691921391697`*^9, 
   3.944869209813281*^9}, 3.944869262601307*^9, {3.944869364852697*^9, 
   3.9448693931420317`*^9}, {3.9448695369505463`*^9, 3.944869547711876*^9}, {
   3.944869583066887*^9, 3.9448695880695744`*^9}, {3.94486971185631*^9, 
   3.944869746889935*^9}, {3.944870114883615*^9, 3.9448701422413797`*^9}, 
   3.9448702588013477`*^9, {3.944870299716125*^9, 3.944870329665805*^9}, {
   3.944870642091811*^9, 3.944870670106592*^9}, {3.944870738295493*^9, 
   3.944870745861504*^9}, 3.9448710131141453`*^9, 3.944871197619019*^9, {
   3.944871687028665*^9, 3.9448717105428743`*^9}, 3.944871770631998*^9, 
   3.9448720732695293`*^9, 3.9448721096968203`*^9, 3.944872263603178*^9, {
   3.944872384247899*^9, 3.944872405037994*^9}, {3.9448724481965446`*^9, 
   3.944872481557919*^9}, {3.944872872728424*^9, 3.9448729454749403`*^9}, {
   3.944873176652182*^9, 3.944873202535262*^9}, {3.944873543577909*^9, 
   3.944873574098654*^9}, {3.9448740400465813`*^9, 3.944874080904498*^9}, {
   3.9448741221606293`*^9, 3.944874161137451*^9}, {3.944874202136689*^9, 
   3.944874225698382*^9}, 3.944874267336069*^9, {3.944875273359373*^9, 
   3.944875284135727*^9}, 3.944875376024693*^9, 3.94504738462927*^9, {
   3.94504756937076*^9, 3.945047585695619*^9}, 3.945047627730583*^9, 
   3.945048667566327*^9, 3.948245094304249*^9, 3.949886684071867*^9, {
   3.949886718303659*^9, 3.949886746727936*^9}, {3.949886782699533*^9, 
   3.949886807565854*^9}, 3.9505664084981194`*^9, 3.950566738484861*^9, 
   3.950623169890861*^9, 3.950633713917678*^9, 3.951136645332424*^9, 
   3.9511388510631742`*^9, 3.9511399367175293`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"9c7f9d50-8a91-4274-a38f-02d3b36a51a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AhatInvariant", "[", "2", "]"}], " ", "//", 
  "Together"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AhatInvariant", "[", "3", "]"}], " ", "//", " ", 
  "Together"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AhatInvariant", "[", "4", "]"}], "//", " ", 
  "Together"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AhatInvariant", "[", "5", "]"}], "//", " ", "Together"}]}], "Input",\

 CellChangeTimes->{{3.944875980997356*^9, 3.944876001060446*^9}, {
  3.945047542800766*^9, 3.945047544217862*^9}, {3.945048684618122*^9, 
  3.94504868733171*^9}, {3.945102047765382*^9, 3.9451020545880737`*^9}, {
  3.9451021144113007`*^9, 3.9451021159573383`*^9}, {3.951134852249847*^9, 
  3.951134904651045*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"56df988d-0138-4b36-8692-68dc17aa71ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "896"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", " ", "\[Sigma]"}], "-", 
     SuperscriptBox[
      RowBox[{"p", "[", "1", "]"}], "2"]}], ")"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.944876003985344*^9, 3.945047386207082*^9, 3.945047571733835*^9, 
   3.945047629940255*^9, 3.9450486923936663`*^9, 3.945102057240839*^9, 
   3.945102123534243*^9, 3.948245097391864*^9, 3.949886686340116*^9, 
   3.9505664093221493`*^9, 3.9505667392997913`*^9, 3.950623170750616*^9, 
   3.950632826910975*^9, 3.950633714762854*^9, {3.951134861134531*^9, 
   3.951134884659628*^9}, 3.9511366461569977`*^9, 3.9511388519330893`*^9, 
   3.951139937534725*^9, 3.951346317373069*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"afc6fba8-6ab0-496f-865e-a9def1f9aa77"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{
    RowBox[{"24", " ", "\[Sigma]"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"p", "[", "1", "]"}], "3"]}], "-", 
    RowBox[{"4", " ", 
     RowBox[{"p", "[", "1", "]"}], " ", 
     RowBox[{"p", "[", "2", "]"}]}]}], "190464"], "}"}]], "Output",
 CellChangeTimes->{
  3.944876003985344*^9, 3.945047386207082*^9, 3.945047571733835*^9, 
   3.945047629940255*^9, 3.9450486923936663`*^9, 3.945102057240839*^9, 
   3.945102123534243*^9, 3.948245097391864*^9, 3.949886686340116*^9, 
   3.9505664093221493`*^9, 3.9505667392997913`*^9, 3.950623170750616*^9, 
   3.950632826910975*^9, 3.950633714762854*^9, {3.951134861134531*^9, 
   3.951134884659628*^9}, 3.9511366461569977`*^9, 3.9511388519330893`*^9, 
   3.951139937534725*^9, 3.951346318471615*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"13dc52e7-dd55-490d-8983-71d0137d1d89"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{
    RowBox[{"2880", " ", "\[Sigma]"}], "-", 
    RowBox[{"153", " ", 
     SuperscriptBox[
      RowBox[{"p", "[", "1", "]"}], "4"]}], "+", 
    RowBox[{"360", " ", 
     SuperscriptBox[
      RowBox[{"p", "[", "1", "]"}], "2"], " ", 
     RowBox[{"p", "[", "2", "]"}]}], "-", 
    RowBox[{"80", " ", 
     SuperscriptBox[
      RowBox[{"p", "[", "2", "]"}], "2"]}], "-", 
    RowBox[{"192", " ", 
     RowBox[{"p", "[", "1", "]"}], " ", 
     RowBox[{"p", "[", "3", "]"}]}]}], "187269120"], "}"}]], "Output",
 CellChangeTimes->{
  3.944876003985344*^9, 3.945047386207082*^9, 3.945047571733835*^9, 
   3.945047629940255*^9, 3.9450486923936663`*^9, 3.945102057240839*^9, 
   3.945102123534243*^9, 3.948245097391864*^9, 3.949886686340116*^9, 
   3.9505664093221493`*^9, 3.9505667392997913`*^9, 3.950623170750616*^9, 
   3.950632826910975*^9, 3.950633714762854*^9, {3.951134861134531*^9, 
   3.951134884659628*^9}, 3.9511366461569977`*^9, 3.9511388519330893`*^9, 
   3.951139937534725*^9, 3.951346319897903*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"56befb8e-5303-4c9d-ac2c-98433e5d0782"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "253176053760"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"120960", " ", "\[Sigma]"}], "+", 
     RowBox[{"2635", " ", 
      SuperscriptBox[
       RowBox[{"p", "[", "1", "]"}], "5"]}], "-", 
     RowBox[{"8840", " ", 
      SuperscriptBox[
       RowBox[{"p", "[", "1", "]"}], "3"], " ", 
      RowBox[{"p", "[", "2", "]"}]}], "+", 
     RowBox[{"5104", " ", 
      RowBox[{"p", "[", "1", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"p", "[", "2", "]"}], "2"]}], "+", 
     RowBox[{"5984", " ", 
      SuperscriptBox[
       RowBox[{"p", "[", "1", "]"}], "2"], " ", 
      RowBox[{"p", "[", "3", "]"}]}], "-", 
     RowBox[{"2688", " ", 
      RowBox[{"p", "[", "2", "]"}], " ", 
      RowBox[{"p", "[", "3", "]"}]}], "-", 
     RowBox[{"3264", " ", 
      RowBox[{"p", "[", "1", "]"}], " ", 
      RowBox[{"p", "[", "4", "]"}]}]}], ")"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.944876003985344*^9, 3.945047386207082*^9, 3.945047571733835*^9, 
   3.945047629940255*^9, 3.9450486923936663`*^9, 3.945102057240839*^9, 
   3.945102123534243*^9, 3.948245097391864*^9, 3.949886686340116*^9, 
   3.9505664093221493`*^9, 3.9505667392997913`*^9, 3.950623170750616*^9, 
   3.950632826910975*^9, 3.950633714762854*^9, {3.951134861134531*^9, 
   3.951134884659628*^9}, 3.9511366461569977`*^9, 3.9511388519330893`*^9, 
   3.951139937534725*^9, 3.9513463216677847`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"1be93306-67e2-4035-b330-7a8bf4adaf68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MilnorDetection", "[", "2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MilnorDetection", "[", "3", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MilnorDetection", "[", "4", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"EAhatDetection", "[", "2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"EAhatDetection", "[", "3", "]"}], "\[IndentingNewLine]", 
 RowBox[{"EAhatDetection", "[", "4", "]"}], "\[IndentingNewLine]", 
 RowBox[{"EAhatDetection", "[", "5", "]"}], "\[IndentingNewLine]", 
 RowBox[{"EAhatDetection", "[", "6", "]"}]}], "Input",
 CellChangeTimes->{{3.9448742379925528`*^9, 3.944874238859836*^9}, {
   3.9451000818294153`*^9, 3.945100108125311*^9}, {3.945100157068815*^9, 
   3.945100172907659*^9}, {3.945100225907583*^9, 3.9451002301774187`*^9}, 
   3.945102037760631*^9, {3.945102117857368*^9, 3.945102118658807*^9}, {
   3.945138658877886*^9, 3.945138690298108*^9}, {3.948245183180254*^9, 
   3.948245195449924*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"0f5f5603-d837-49d3-a4c8-4b9b67f2a0ae"],

Cell[BoxData[
 RowBox[{"{", "7", "}"}]], "Output",
 CellChangeTimes->{{3.945100089420847*^9, 3.9451001119493837`*^9}, 
   3.945100175304888*^9, 3.9451002326012983`*^9, 3.945102040327832*^9, 
   3.9451021205721083`*^9, {3.945138664666143*^9, 3.945138692732602*^9}, 
   3.945538939922213*^9, 3.9482451017513*^9, 3.9482451974056683`*^9, 
   3.949886689940851*^9, 3.950566414095735*^9, 3.950566744103931*^9, 
   3.950623175597924*^9, 3.9506328376157923`*^9, 3.950633719627684*^9, 
   3.951136651025625*^9, 3.95113885681*^9, 3.951139942246416*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"547c4853-354f-4a5c-a5e0-61634e252f3d"],

Cell[BoxData[
 RowBox[{"{", "31", "}"}]], "Output",
 CellChangeTimes->{{3.945100089420847*^9, 3.9451001119493837`*^9}, 
   3.945100175304888*^9, 3.9451002326012983`*^9, 3.945102040327832*^9, 
   3.9451021205721083`*^9, {3.945138664666143*^9, 3.945138692732602*^9}, 
   3.945538939922213*^9, 3.9482451017513*^9, 3.9482451974056683`*^9, 
   3.949886689940851*^9, 3.950566414095735*^9, 3.950566744103931*^9, 
   3.950623175597924*^9, 3.9506328376157923`*^9, 3.950633719627684*^9, 
   3.951136651025625*^9, 3.95113885681*^9, 3.951139942797141*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"e2c67576-632e-4629-b62c-feb0c7f41182"],

Cell[BoxData[
 RowBox[{"{", "127", "}"}]], "Output",
 CellChangeTimes->{{3.945100089420847*^9, 3.9451001119493837`*^9}, 
   3.945100175304888*^9, 3.9451002326012983`*^9, 3.945102040327832*^9, 
   3.9451021205721083`*^9, {3.945138664666143*^9, 3.945138692732602*^9}, 
   3.945538939922213*^9, 3.9482451017513*^9, 3.9482451974056683`*^9, 
   3.949886689940851*^9, 3.950566414095735*^9, 3.950566744103931*^9, 
   3.950623175597924*^9, 3.9506328376157923`*^9, 3.950633719627684*^9, 
   3.951136651025625*^9, 3.95113885681*^9, 3.951139943506933*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"8d743270-be12-4fb4-b93f-5614e7d20ff7"],

Cell[BoxData[
 RowBox[{"{", "28", "}"}]], "Output",
 CellChangeTimes->{{3.945100089420847*^9, 3.9451001119493837`*^9}, 
   3.945100175304888*^9, 3.9451002326012983`*^9, 3.945102040327832*^9, 
   3.9451021205721083`*^9, {3.945138664666143*^9, 3.945138692732602*^9}, 
   3.945538939922213*^9, 3.9482451017513*^9, 3.9482451974056683`*^9, 
   3.949886689940851*^9, 3.950566414095735*^9, 3.950566744103931*^9, 
   3.950623175597924*^9, 3.9506328376157923`*^9, 3.950633719627684*^9, 
   3.951136651025625*^9, 3.95113885681*^9, 3.951139943507704*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"ab81ecb1-c1cf-40cd-90cb-a1d3a8a0819d"],

Cell[BoxData[
 RowBox[{"{", "992", "}"}]], "Output",
 CellChangeTimes->{{3.945100089420847*^9, 3.9451001119493837`*^9}, 
   3.945100175304888*^9, 3.9451002326012983`*^9, 3.945102040327832*^9, 
   3.9451021205721083`*^9, {3.945138664666143*^9, 3.945138692732602*^9}, 
   3.945538939922213*^9, 3.9482451017513*^9, 3.9482451974056683`*^9, 
   3.949886689940851*^9, 3.950566414095735*^9, 3.950566744103931*^9, 
   3.950623175597924*^9, 3.9506328376157923`*^9, 3.950633719627684*^9, 
   3.951136651025625*^9, 3.95113885681*^9, 3.951139943508225*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"9869a422-8704-4934-9db3-517fab508e2e"],

Cell[BoxData[
 RowBox[{"{", "8128", "}"}]], "Output",
 CellChangeTimes->{{3.945100089420847*^9, 3.9451001119493837`*^9}, 
   3.945100175304888*^9, 3.9451002326012983`*^9, 3.945102040327832*^9, 
   3.9451021205721083`*^9, {3.945138664666143*^9, 3.945138692732602*^9}, 
   3.945538939922213*^9, 3.9482451017513*^9, 3.9482451974056683`*^9, 
   3.949886689940851*^9, 3.950566414095735*^9, 3.950566744103931*^9, 
   3.950623175597924*^9, 3.9506328376157923`*^9, 3.950633719627684*^9, 
   3.951136651025625*^9, 3.95113885681*^9, 3.9511399435087233`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"695b6ae8-bb0a-446d-9ee2-9c63fedfaa16"],

Cell[BoxData[
 RowBox[{"{", "261632", "}"}]], "Output",
 CellChangeTimes->{{3.945100089420847*^9, 3.9451001119493837`*^9}, 
   3.945100175304888*^9, 3.9451002326012983`*^9, 3.945102040327832*^9, 
   3.9451021205721083`*^9, {3.945138664666143*^9, 3.945138692732602*^9}, 
   3.945538939922213*^9, 3.9482451017513*^9, 3.9482451974056683`*^9, 
   3.949886689940851*^9, 3.950566414095735*^9, 3.950566744103931*^9, 
   3.950623175597924*^9, 3.9506328376157923`*^9, 3.950633719627684*^9, 
   3.951136651025625*^9, 3.95113885681*^9, 3.951139943509223*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"2c8826fc-54b4-4ea0-868d-5c252bff02e0"],

Cell[BoxData[
 RowBox[{"{", "2096128", "}"}]], "Output",
 CellChangeTimes->{{3.945100089420847*^9, 3.9451001119493837`*^9}, 
   3.945100175304888*^9, 3.9451002326012983`*^9, 3.945102040327832*^9, 
   3.9451021205721083`*^9, {3.945138664666143*^9, 3.945138692732602*^9}, 
   3.945538939922213*^9, 3.9482451017513*^9, 3.9482451974056683`*^9, 
   3.949886689940851*^9, 3.950566414095735*^9, 3.950566744103931*^9, 
   3.950623175597924*^9, 3.9506328376157923`*^9, 3.950633719627684*^9, 
   3.951136651025625*^9, 3.95113885681*^9, 3.951139943509713*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"cf143d31-f1dc-480c-9943-1b233fbff82f"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9451386936499643`*^9, 3.9451386945224037`*^9}, {
  3.945307648527253*^9, 3.945307721263278*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"10b0bbf5-79ec-4b01-b94d-a57f35f61978"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ImprovedMilnorInvariant", "[", "n_Integer", "]"}], " ", ":=", " ", 
  
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"MilnorInvariant", "[", "n", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Epsilon]", "[", "n", "]"}], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "n"}], "-", "1"}], ")"}], "!"}]}], " ", ")"}]}], ")"}],
    "//", " ", "InvExpand"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ImprovedMilnorDetection", "[", "n_Integer", "]"}], " ", ":=", 
  RowBox[{"Abs", "[", 
   RowBox[{"Denominator", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ImprovedMilnorInvariant", "[", "n", "]"}], "/.", 
      RowBox[{
       RowBox[{"p", "[", "_", "]"}], "->", "0"}]}], "/.", 
     RowBox[{"\[Sigma]", "->", "8"}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.945317950548369*^9, 3.945318063314253*^9}, {
  3.94531812627037*^9, 3.945318204366106*^9}, {3.948245575152183*^9, 
  3.948245605003459*^9}, {3.948245683722199*^9, 3.948245720771337*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"adefdf09-d936-4ee4-a152-2db6b32349e3"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.950192360740234*^9, 3.95019243164227*^9}, {
   3.950192648383038*^9, 3.950192666719576*^9}, {3.950196547812595*^9, 
   3.9501965901786613`*^9}, {3.950196621358136*^9, 3.9501966217930403`*^9}, 
   3.9502275339262667`*^9, {3.950227689632988*^9, 3.950227729470592*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"7623fb14-9384-4bb3-9e6a-352bfe8a337b"],

Cell[BoxData[{
 RowBox[{"TwistedAHat", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "25167"}], 
      RowBox[{
       RowBox[{"p", "[", "2", "]"}], "^", "3"}]}], "-", 
     RowBox[{"18832", 
      RowBox[{
       RowBox[{"p", "[", "3", "]"}], "^", "2"}]}], "+", 
     RowBox[{"38828", 
      RowBox[{"p", "[", "2", "]"}], 
      RowBox[{"p", "[", "4", "]"}]}], "-", 
     RowBox[{"4976", 
      RowBox[{"p", "[", "6", "]"}]}]}], ")"}], "/", 
   "158505984000"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TwistedAHatInvariant", " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"TwistedAHat", "/.", 
       RowBox[{
        RowBox[{"p", "[", "6", "]"}], "->", 
        RowBox[{"TopPontryagin", "[", "6", "]"}]}]}], ")"}], "/", "24"}], "//",
     "Expand"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"TwistedADetection", " ", ":=", 
  RowBox[{"Abs", "[", 
   RowBox[{"Denominator", "[", 
    RowBox[{
     RowBox[{"TwistedAHatInvariant", "/.", 
      RowBox[{
       RowBox[{"p", "[", "_", "]"}], "->", "0"}]}], "/.", 
     RowBox[{"\[Sigma]", "->", "8"}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.950269152574624*^9, 3.950269449429468*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"85119768-6629-43e4-b81b-e78cf1f75e2c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MilnorDetection", "[", "6", "]"}], "\[IndentingNewLine]", 
   RowBox[{"AhatDetection", "[", "6", "]"}], "\[IndentingNewLine]", 
   "TwistedADetection", "\[IndentingNewLine]", 
   RowBox[{"bP4nSize", "[", "6", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.950269454973199*^9, 3.950269480482926*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"037e81a4-5bf1-47ca-a954-d992e4f6f160"],

Cell[BoxData[
 RowBox[{"{", "1414477", "}"}]], "Output",
 CellChangeTimes->{{3.9502694692184277`*^9, 3.9502694841996307`*^9}, 
   3.9505664165597067`*^9, 3.9505667466032047`*^9, {3.9505697314169397`*^9, 
   3.950569750431332*^9}, 3.950623178075767*^9, 3.9506337220961313`*^9, 
   3.951136653564444*^9, 3.9511388592830877`*^9, 3.9511399446432056`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"fc5bd104-9ab9-4b48-8ec9-44bcf7e0a2ba"],

Cell[BoxData[
 RowBox[{"{", "2096128", "}"}]], "Output",
 CellChangeTimes->{{3.9502694692184277`*^9, 3.9502694841996307`*^9}, 
   3.9505664165597067`*^9, 3.9505667466032047`*^9, {3.9505697314169397`*^9, 
   3.950569750431332*^9}, 3.950623178075767*^9, 3.9506337220961313`*^9, 
   3.951136653564444*^9, 3.9511388592830877`*^9, 3.951139946838893*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"4733b2a9-5bff-4322-8f54-6e4201ee45fc"],

Cell[BoxData[
 RowBox[{"{", "1448424448", "}"}]], "Output",
 CellChangeTimes->{{3.9502694692184277`*^9, 3.9502694841996307`*^9}, 
   3.9505664165597067`*^9, 3.9505667466032047`*^9, {3.9505697314169397`*^9, 
   3.950569750431332*^9}, 3.950623178075767*^9, 3.9506337220961313`*^9, 
   3.951136653564444*^9, 3.9511388592830877`*^9, 3.951139947971662*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"5c707496-6fdb-4e94-a7e5-7cfbbe1a0def"],

Cell[BoxData[
 RowBox[{"{", "1448424448", "}"}]], "Output",
 CellChangeTimes->{{3.9502694692184277`*^9, 3.9502694841996307`*^9}, 
   3.9505664165597067`*^9, 3.9505667466032047`*^9, {3.9505697314169397`*^9, 
   3.950569750431332*^9}, 3.950623178075767*^9, 3.9506337220961313`*^9, 
   3.951136653564444*^9, 3.9511388592830877`*^9, 3.951139947972365*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"5ba680d9-3b23-4cf3-8fd1-81c8bef6a911"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"scinot", "[", "x_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "e", ",", "mantissa"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m", ",", "e"}], "}"}], "=", 
       RowBox[{"MantissaExponent", "[", "x", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mantissa", "=", 
       RowBox[{"N", "[", "m", "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"ensures", " ", "a", " ", "decimal", " ", "form"}], ",", 
        RowBox[{"e", ".", "g", ".", "1.2345"}]}], "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"e", "==", "0"}], ",", 
        RowBox[{"ToString", "[", "mantissa", "]"}], ",", 
        RowBox[{
         RowBox[{"ToString", "[", "mantissa", "]"}], "<>", "\"\<e\>\"", "<>", 
         
         RowBox[{"ToString", "[", "e", "]"}]}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"If", " ", "x", " ", "is", " ", "non"}], "\[Hyphen]", 
    RowBox[{"numeric", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"e", ".", "g", ".", "an"}], " ", "integer", " ", "index"}], 
      ")"}]}], ",", 
    RowBox[{"just", " ", "turn", " ", "it", " ", "into", " ", "a", " ", 
     RowBox[{"string", "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.950269584717452*^9, 3.950269627666647*^9}, 
   3.950269682152433*^9, {3.950270275465148*^9, 3.9502702768631897`*^9}, 
   3.950569637505032*^9, {3.951139112411899*^9, 3.9511391569007607`*^9}, {
   3.9511394194676313`*^9, 3.951139421517271*^9}, {3.951139549771833*^9, 
   3.951139575413805*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"f65b26a6-9438-4f11-9eb1-d3bca83a556c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.950269584717452*^9, 3.950269627666647*^9}, 
   3.950269682152433*^9, {3.950270275465148*^9, 3.9502702768631897`*^9}, 
   3.950569637505032*^9, {3.951139112411899*^9, 3.9511391147788877`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"f2862a11-87e1-49f5-80cb-8e0e396f94d3"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MahowaldHopkinsInvariant", "[", "n_Integer", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"n", "==", "6"}], ",", "1448424448", ",", "0"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t", ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"Log10", "[", 
           RowBox[{"bP4nSize", "[", "x", "]"}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"N", "[", 
          RowBox[{"Log10", "[", 
           RowBox[{"EMilnorDetection", "[", "x", "]"}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"N", "[", 
          RowBox[{"Log10", "[", 
           RowBox[{"EAhatDetection", "[", "x", "]"}], "]"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "1", ",", "250"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.950566458782805*^9, 3.950566472523129*^9}, {
   3.9505665271502657`*^9, 3.950566538249666*^9}, {3.950566570333301*^9, 
   3.95056673053584*^9}, {3.95056678025169*^9, 3.950566831774016*^9}, 
   3.950566903074072*^9, 3.950569610891992*^9, {3.950569674606739*^9, 
   3.950569678103077*^9}, {3.9505697832656517`*^9, 3.950569785429288*^9}, {
   3.950611269568348*^9, 3.950611319487567*^9}, {3.9506113727805853`*^9, 
   3.9506115022029552`*^9}, {3.95061154304771*^9, 3.950611645681974*^9}, {
   3.950611716006764*^9, 3.950611843323311*^9}, {3.950622895703837*^9, 
   3.950622929688055*^9}, {3.950623063425975*^9, 3.950623068091229*^9}, {
   3.950623175612791*^9, 3.950623176217659*^9}, {3.9506328481342382`*^9, 
   3.9506328807390223`*^9}, 3.9511366321622047`*^9, {3.95113666756145*^9, 
   3.9511367212417793`*^9}, {3.951137967493352*^9, 3.9511379996313467`*^9}, {
   3.951138135332787*^9, 3.951138135503993*^9}, {3.9511384857775803`*^9, 
   3.9511384885955887`*^9}, {3.9511388408711843`*^9, 3.951138845366828*^9}, {
   3.95113891787871*^9, 3.951138918371085*^9}, {3.951139059613708*^9, 
   3.951139099283576*^9}, {3.951139361806025*^9, 3.95113939503788*^9}, {
   3.951139429668016*^9, 3.9511395284614487`*^9}, {3.951139591359041*^9, 
   3.95113962728386*^9}, {3.9511397173473988`*^9, 3.951139749244314*^9}, {
   3.951139801824185*^9, 3.9511398228988247`*^9}, {3.951140051141636*^9, 
   3.951140069289913*^9}, {3.9511401565554943`*^9, 3.951140189713071*^9}, {
   3.95156054347893*^9, 
   3.9515605743245487`*^9}},ExpressionUUID->"4c0c050f-8295-433a-9339-\
d44bd89c2701"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"1", ")"}], " ", "Flatten", " ", "each", " ", "row", " ", "and", 
    " ", "add", " ", "an", " ", "index", " ", "as", " ", "the", " ", "first", 
    " ", 
    RowBox[{"column", "."}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"flattenedData", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"t", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "t", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"indexedData", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"flattenedData", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "flattenedData", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scientificData", "=", "indexedData"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"3", ")"}], " ", "Export", " ", "as", " ", "a", " ", "space"}], 
     "\[Hyphen]", 
     RowBox[{"separated", " ", 
      RowBox[{"table", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<mydata.dat\>\"", ",", "scientificData", ",", "\"\<Table\>\""}], 
     "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bP4nSize", "[", "x", "]"}], ",", 
        RowBox[{"EMilnorDetection", "[", "x", "]"}], ",", " ", 
        RowBox[{"EAhatDetection", "[", "x", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", " ", 
      RowBox[{"ScalingFunctions", "->", " ", "\"\<Log\>\""}]}], "]"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.950566458782805*^9, 3.950566472523129*^9}, {
   3.9505665271502657`*^9, 3.950566538249666*^9}, {3.950566570333301*^9, 
   3.95056673053584*^9}, {3.95056678025169*^9, 3.950566831774016*^9}, 
   3.950566903074072*^9, 3.950569610891992*^9, {3.950569674606739*^9, 
   3.950569678103077*^9}, {3.9505697832656517`*^9, 3.950569785429288*^9}, {
   3.950611269568348*^9, 3.950611319487567*^9}, {3.9506113727805853`*^9, 
   3.9506115022029552`*^9}, {3.95061154304771*^9, 3.950611645681974*^9}, {
   3.950611716006764*^9, 3.950611843323311*^9}, {3.950622895703837*^9, 
   3.950622929688055*^9}, {3.950623063425975*^9, 3.950623068091229*^9}, {
   3.950623175612791*^9, 3.950623176217659*^9}, {3.9506328481342382`*^9, 
   3.9506328807390223`*^9}, 3.9511366321622047`*^9, {3.95113666756145*^9, 
   3.9511367212417793`*^9}, {3.951137967493352*^9, 3.9511379996313467`*^9}, {
   3.951138135332787*^9, 3.951138135503993*^9}, {3.9511384857775803`*^9, 
   3.9511384885955887`*^9}, {3.9511388408711843`*^9, 3.951138845366828*^9}, {
   3.95113891787871*^9, 3.951138918371085*^9}, {3.951139059613708*^9, 
   3.951139099283576*^9}, {3.951139361806025*^9, 3.95113939503788*^9}, {
   3.951139429668016*^9, 3.9511395284614487`*^9}, {3.951139591359041*^9, 
   3.95113962728386*^9}, {3.9511397173473988`*^9, 3.951139749244314*^9}, {
   3.951139801824185*^9, 3.951139865377748*^9}, {3.951139913025194*^9, 
   3.9511399147985764`*^9}, {3.951140076070915*^9, 3.951140076395363*^9}, {
   3.951140126096545*^9, 3.951140131003392*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"8c71cede-2d1a-4dd3-b5cc-ec20786050ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"s", "[", "n_Integer", "]"}], " ", ":=", 
    RowBox[{
     RowBox[{"2", "^", 
      RowBox[{"{", 
       RowBox[{"2", "n"}], "}"}]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "^", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "n"}], "-", "1"}], "}"}]}], "-", "1"}], ")"}], 
     RowBox[{
      RowBox[{"BernoulliB", "[", 
       RowBox[{"2", "n"}], "]"}], "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "n"}], ")"}], "!"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"z", "/", 
      RowBox[{"Tanh", "[", "z", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "10"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"s", "[", "4", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.951146487273855*^9, 3.9511466234722967`*^9}, {
  3.951146659730612*^9, 3.951146684838346*^9}, {3.951146738215062*^9, 
  3.9511467397235394`*^9}, {3.951146936576435*^9, 3.951146937405188*^9}, {
  3.9513939217455883`*^9, 3.9513939249341927`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"6adf5b68-b617-465a-a53c-84d5e729c2e5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", 
   FractionBox[
    SuperscriptBox["z", "2"], "3"], "-", 
   FractionBox[
    SuperscriptBox["z", "4"], "45"], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["z", "6"]}], "945"], "-", 
   FractionBox[
    SuperscriptBox["z", "8"], "4725"], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["z", "10"]}], "93555"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "z", "]"}], "11"],
    SeriesData[$CellContext`z, 0, {}, 0, 11, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 0, {1, 0, 
    Rational[1, 3], 0, 
    Rational[-1, 45], 0, 
    Rational[2, 945], 0, 
    Rational[-1, 4725], 0, 
    Rational[2, 93555]}, 0, 11, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.9511465032016783`*^9, 3.951146537536551*^9}, {
   3.951146582377015*^9, 3.9511466254601107`*^9}, 3.9511466631093493`*^9, 
   3.951146742718692*^9, {3.951146939234136*^9, 3.951146942044182*^9}, {
   3.95139391737995*^9, 3.9513939271065807`*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"8f8daba4-025a-4377-a269-6f370e535bb0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", 
   FractionBox["127", "4725"]}], "}"}]], "Output",
 CellChangeTimes->{{3.9511465032016783`*^9, 3.951146537536551*^9}, {
   3.951146582377015*^9, 3.9511466254601107`*^9}, 3.9511466631093493`*^9, 
   3.951146742718692*^9, {3.951146939234136*^9, 3.951146942044182*^9}, {
   3.95139391737995*^9, 3.95139392710741*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"36c62db3-7514-4948-91fa-fc58b02aab20"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{864, 1051},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ba25c7f4-61db-490a-81d3-5b4db642036b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 357, 6, 53, "Subsection",ExpressionUUID->"15f82e98-93fc-4dd5-97d7-5930c6c0ba92"],
Cell[936, 30, 1232, 25, 49, "Input",ExpressionUUID->"592928d8-9a7a-43b1-b784-c3bf0f2f4d79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2205, 60, 334, 5, 53, "Subsection",ExpressionUUID->"622c05f2-4006-40ce-98bf-31e910d22cdd"],
Cell[2542, 67, 1574, 32, 29, "Input",ExpressionUUID->"54baa4a0-eb8a-4864-a54e-2d3a37ebeb37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4153, 104, 216, 4, 53, "Subsection",ExpressionUUID->"22c3c24f-7284-4036-8b59-c4417f8ed00e"],
Cell[CellGroupData[{
Cell[4394, 112, 2287, 59, 213, "Input",ExpressionUUID->"e2ddecc4-7869-428a-9185-63657d15e16e"],
Cell[6684, 173, 673, 14, 33, "Output",ExpressionUUID->"1c0ea6be-2585-4f2a-bb62-7ee01868b652"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7394, 192, 6535, 155, 437, "Input",ExpressionUUID->"385acd73-d248-4b88-8a88-5922098d7438"],
Cell[13932, 349, 680, 10, 33, "Output",ExpressionUUID->"3855ee6d-8560-4bce-8a6e-111a1084a1c7"],
Cell[14615, 361, 1362, 33, 48, "Output",ExpressionUUID->"34c90c7c-9fd7-4875-b2ec-eecc13d8fc4e"]
}, Open  ]],
Cell[15992, 397, 147, 3, 29, "Input",ExpressionUUID->"971defb0-8988-4c99-8f16-e4158e962b84"],
Cell[16142, 402, 147, 3, 29, "Input",ExpressionUUID->"d5fdefde-c084-49ae-bcba-bc0daf427378"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16326, 410, 252, 4, 53, "Subsection",ExpressionUUID->"900b315a-1dc2-4cbb-8f11-c1c86e046a18"],
Cell[16581, 416, 4511, 96, 111, "Input",ExpressionUUID->"3a8e2366-4d52-45fd-b6e3-40cc13ea8cb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21129, 517, 157, 3, 53, "Subsection",ExpressionUUID->"6e134985-0d85-4e79-8786-602061edb1a2"],
Cell[21289, 522, 3758, 84, 111, "Input",ExpressionUUID->"d758b261-f9ce-4070-a46a-c196ec6a72e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25084, 611, 361, 6, 53, "Subsection",ExpressionUUID->"aec9b29a-2bee-4311-840f-f751cf19e613"],
Cell[CellGroupData[{
Cell[25470, 621, 6030, 103, 151, "Input",ExpressionUUID->"bb1782a8-c4e7-4848-89bb-e0e79a5960c0"],
Cell[31503, 726, 3245, 49, 48, "Output",ExpressionUUID->"e116c431-bc81-490b-9390-7cec853ba949"],
Cell[34751, 777, 3484, 57, 46, "Output",ExpressionUUID->"426d85a8-df3c-4dca-a6c8-2af7ad99a44f"],
Cell[38238, 836, 3707, 63, 46, "Output",ExpressionUUID->"334f50e0-ce90-4794-9828-047cac35648d"],
Cell[41948, 901, 3967, 70, 48, "Output",ExpressionUUID->"1141645e-eb7b-43af-9712-eade294dcdc0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45952, 976, 837, 24, 45, "Input",ExpressionUUID->"900abb62-4c67-4333-b3a0-c4f6a599f9a2"],
Cell[46792, 1002, 3586, 62, 48, "Output",ExpressionUUID->"9c7f9d50-8a91-4274-a38f-02d3b36a51a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50415, 1069, 825, 19, 90, "Input",ExpressionUUID->"56df988d-0138-4b36-8692-68dc17aa71ea"],
Cell[51243, 1090, 820, 18, 46, "Output",ExpressionUUID->"afc6fba8-6ab0-496f-865e-a9def1f9aa77"],
Cell[52066, 1110, 906, 20, 48, "Output",ExpressionUUID->"13dc52e7-dd55-490d-8983-71d0137d1d89"],
Cell[52975, 1132, 1147, 27, 48, "Output",ExpressionUUID->"56befb8e-5303-4c9d-ac2c-98433e5d0782"],
Cell[54125, 1161, 1514, 37, 74, "Output",ExpressionUUID->"1be93306-67e2-4035-b330-7a8bf4adaf68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55676, 1203, 1056, 17, 192, "Input",ExpressionUUID->"0f5f5603-d837-49d3-a4c8-4b9b67f2a0ae"],
Cell[56735, 1222, 621, 9, 33, "Output",ExpressionUUID->"547c4853-354f-4a5c-a5e0-61634e252f3d"],
Cell[57359, 1233, 622, 9, 33, "Output",ExpressionUUID->"e2c67576-632e-4629-b62c-feb0c7f41182"],
Cell[57984, 1244, 623, 9, 33, "Output",ExpressionUUID->"8d743270-be12-4fb4-b93f-5614e7d20ff7"],
Cell[58610, 1255, 622, 9, 33, "Output",ExpressionUUID->"ab81ecb1-c1cf-40cd-90cb-a1d3a8a0819d"],
Cell[59235, 1266, 623, 9, 33, "Output",ExpressionUUID->"9869a422-8704-4934-9db3-517fab508e2e"],
Cell[59861, 1277, 626, 9, 33, "Output",ExpressionUUID->"695b6ae8-bb0a-446d-9ee2-9c63fedfaa16"],
Cell[60490, 1288, 626, 9, 33, "Output",ExpressionUUID->"2c8826fc-54b4-4ea0-868d-5c252bff02e0"],
Cell[61119, 1299, 627, 9, 33, "Output",ExpressionUUID->"cf143d31-f1dc-480c-9943-1b233fbff82f"]
}, Open  ]],
Cell[61761, 1311, 224, 3, 29, "Input",ExpressionUUID->"10b0bbf5-79ec-4b01-b94d-a57f35f61978"],
Cell[61988, 1316, 1139, 29, 70, "Input",ExpressionUUID->"adefdf09-d936-4ee4-a152-2db6b32349e3"],
Cell[63130, 1347, 394, 5, 29, "Input",ExpressionUUID->"7623fb14-9384-4bb3-9e6a-352bfe8a337b"],
Cell[63527, 1354, 1319, 37, 90, "Input",ExpressionUUID->"85119768-6629-43e4-b81b-e78cf1f75e2c"],
Cell[CellGroupData[{
Cell[64871, 1395, 444, 8, 111, "Input",ExpressionUUID->"037e81a4-5bf1-47ca-a954-d992e4f6f160"],
Cell[65318, 1405, 429, 6, 33, "Output",ExpressionUUID->"fc5bd104-9ab9-4b48-8ec9-44bcf7e0a2ba"],
Cell[65750, 1413, 427, 6, 33, "Output",ExpressionUUID->"4733b2a9-5bff-4322-8f54-6e4201ee45fc"],
Cell[66180, 1421, 430, 6, 33, "Output",ExpressionUUID->"5c707496-6fdb-4e94-a7e5-7cfbbe1a0def"],
Cell[66613, 1429, 430, 6, 33, "Output",ExpressionUUID->"5ba680d9-3b23-4cf3-8fd1-81c8bef6a911"]
}, Open  ]],
Cell[67058, 1438, 1756, 45, 111, "Input",ExpressionUUID->"f65b26a6-9438-4f11-9eb1-d3bca83a556c"],
Cell[68817, 1485, 319, 4, 29, "Input",ExpressionUUID->"f2862a11-87e1-49f5-80cb-8e0e396f94d3"],
Cell[69139, 1491, 2600, 52, 131, "Input",ExpressionUUID->"4c0c050f-8295-433a-9339-d44bd89c2701"],
Cell[71742, 1545, 3623, 79, 213, "Input",ExpressionUUID->"8c71cede-2d1a-4dd3-b5cc-ec20786050ba"],
Cell[CellGroupData[{
Cell[75390, 1628, 1192, 33, 90, "Input",ExpressionUUID->"6adf5b68-b617-465a-a53c-84d5e729c2e5"],
Cell[76585, 1663, 1120, 31, 48, "Output",ExpressionUUID->"8f8daba4-025a-4377-a269-6f370e535bb0"],
Cell[77708, 1696, 437, 8, 46, "Output",ExpressionUUID->"36c62db3-7514-4948-91fa-fc58b02aab20"]
}, Open  ]]
}, Open  ]]
}
]
*)

